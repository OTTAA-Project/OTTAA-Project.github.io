"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2802],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9754:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={id:"dartdoc",title:"DartDoc",sidebar_position:1,custom_edit_url:null},i="Dartdoc (building the API reference)",l={unversionedId:"Documentation/dartdoc",id:"Documentation/dartdoc",title:"DartDoc",description:"What is Dartdoc?",source:"@site/docs/Documentation/dartdoc_automatic_documentation.md",sourceDirName:"Documentation",slug:"/Documentation/dartdoc",permalink:"/docs/Documentation/dartdoc",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"dartdoc",title:"DartDoc",sidebar_position:1,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Analytics Implementation",permalink:"/docs/Documentation/analytics"},next:{title:"Libraries",permalink:"/docs/Documentation/libraries"}},c={},s=[{value:"What is Dartdoc?",id:"what-is-dartdoc",level:2},{value:"How to install and run Dartdoc as a library",id:"how-to-install-and-run-dartdoc-as-a-library",level:2},{value:"How to write Dartdoc doc comments",id:"how-to-write-dartdoc-doc-comments",level:2},{value:"Style tips we follow",id:"style-tips-we-follow",level:2},{value:"General writing tips",id:"general-writing-tips",level:3},{value:"Style for comments",id:"style-for-comments",level:3}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dartdoc-building-the-api-reference"},"Dartdoc (building the API reference)"),(0,o.kt)("h2",{id:"what-is-dartdoc"},"What is Dartdoc?"),(0,o.kt)("p",null,"Dartdoc is an automatic documentation generation tool for Dart language. The ",(0,o.kt)("inlineCode",{parentName:"p"},"dart doc")," command generates HTML documentation from Dart source code by looking for and parsing comments on your code that have a special syntax. You can also add descriptions to the generated documentation by using documentation comments, which can contain Markdown formatting."),(0,o.kt)("h2",{id:"how-to-install-and-run-dartdoc-as-a-library"},"How to install and run Dartdoc as a library"),(0,o.kt)("p",null,"First, install the package by running:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"dart pub global activate dartdoc")),(0,o.kt)("p",null,"Second, run from the root directory of a package:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"pub global activate dartdoc ")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"flutter pub get")),(0,o.kt)("p",null,"Third, make sure your package analyzes without errors by running:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"flutter analyze")),(0,o.kt)("p",null,"Finally, to start documenting just run:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"dartdoc")),(0,o.kt)("p",null,"You can find the complete guide to Dartdoc ",(0,o.kt)("a",{parentName:"p",href:"https://pub.dev/packages/dartdoc"},"here"),"."),(0,o.kt)("h2",{id:"how-to-write-dartdoc-doc-comments"},"How to write Dartdoc doc comments"),(0,o.kt)("p",null,"The regular comment syntax for Dart code is ",(0,o.kt)("inlineCode",{parentName:"p"},"//"),". However, using ",(0,o.kt)("inlineCode",{parentName:"p"},"///")," for your comments instead enables Dartdoc to find those comments and generate documentation for them."),(0,o.kt)("p",null,"This will be picked up by Dartdoc:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-[\u2713]"},"\n/// The number of characters in this chunk when unsplit.\nint get length => ...\n")),(0,o.kt)("p",null,"This will not:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-[x]"},"\n// The number of characters in this chunk when unsplit.\nint get length => ...\n")),(0,o.kt)("h2",{id:"style-tips-we-follow"},"Style tips we follow"),(0,o.kt)("p",null,"We intend for our API reference documentation to be straightforward, concise, and user-friendly. Make sure your Dartdoc comments are correctly formatted by following these tips. For a more comprehensive explanation and examples of each tip, please read ",(0,o.kt)("a",{parentName:"p",href:"https://dart.dev/guides/language/effective-dart/documentation#:~:text=use%20//.-,Doc%20comments,-Doc%20comments%20are"},"this section")," of the official Dartdoc guide."),(0,o.kt)("h3",{id:"general-writing-tips"},"General writing tips"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Be brief, use as many words as necessary to explain your code clearly, but not more."),(0,o.kt)("li",{parentName:"ul"},"Avoid abbreviations and acronyms unless they are obvious."),(0,o.kt)("li",{parentName:"ul"},"Prefer using \u201cthis\u201d instead of \u201cthe\u201d to refer to a member\u2019s instance.")),(0,o.kt)("h3",{id:"style-for-comments"},"Style for comments"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Start doc comments with a single-sentence summary."),(0,o.kt)("li",{parentName:"ol"},"Separate the first sentence of a doc comment into its own paragraph."),(0,o.kt)("li",{parentName:"ol"},"Avoid redundancy with the surrounding context by mentioning things the reader already knows."),(0,o.kt)("li",{parentName:"ol"},"Prefer starting function or method comments with third-person verbs."),(0,o.kt)("li",{parentName:"ol"},"Prefer starting a non-boolean variable or property comment with a noun phrase."),(0,o.kt)("li",{parentName:"ol"},"Prefer starting a boolean variable or property comment with \u201cWhether\u201d followed by a noun or gerund phrase."),(0,o.kt)("li",{parentName:"ol"},"Do not write documentation for both the getter and setter of a property."),(0,o.kt)("li",{parentName:"ol"},"Prefer starting library or type comments with noun phrases."),(0,o.kt)("li",{parentName:"ol"},"Consider including code samples in doc comments."),(0,o.kt)("li",{parentName:"ol"},"Use square brackets in doc comments to refer to in-scope identifiers."),(0,o.kt)("li",{parentName:"ol"},"Use prose to explain parameters, return values, and exceptions."),(0,o.kt)("li",{parentName:"ol"},"Put doc comments before metadata annotations."),(0,o.kt)("li",{parentName:"ol"},"Use Markup, but do not abuse it."),(0,o.kt)("li",{parentName:"ol"},"Avoid using HTML as it is not supported by Dartdoc.")),(0,o.kt)("p",null,"For more information, the ",(0,o.kt)("a",{parentName:"p",href:"https://dart.dev/guides/language/effective-dart/documentation"},"Effective Dart: Documentation guide")," covers formatting, linking, markup, and general best practices when authoring doc comments with Dartdoc."))}u.isMDXComponent=!0}}]);